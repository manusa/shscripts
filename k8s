#!/bin/sh
############################################################################################################################################
#  Script     : k8s
#  Author     : Marc Nuri
#  Date       : 2018/02/06
#  Last Edited: 2018/02/15, Marc Nuri
#  Description: Script to automate access to Kubernetes web-ui api
############################################################################################################################################

USAGE=$(cat <<-END
    Usage: k8s <action>\n\n
    Must define the following global variables:\n
	- K8S_URL          URL that point to your kubernetes web-ui\n
	- K8S_AUTH_HEADER  Authorization header\n
	\n
	Available actions:\n
	- list-nodes             Lists available nodes\n
	- list-pods <node>       Lists pods for all namespaced or for a specific node if specified\n
	- log <namespace> <pod>  Shows the log for a specific POD\n
END
)

# Check for parameters
[ $1 ] || { echo $USAGE; exit 1 ; }

# Check for required environment variables
if [ -z ${K8S_URL+x} ]; then echo "K8S_URL is not set" && exit 1; fi

# Check for dependencies
curl -V >/dev/null 2>&1 || { echo >&2 "curl is required for this script" && exit 1 ; }
jq --help >/dev/null 2>&1 || { echo >&2 "jq is required for this script (https://stedolan.github.io/jq/)" && exit 1 ; }
awk -V >/dev/null 2>&1 || { echo >&2 "awk is required for this script" && exit 1 ; }

ACTION=$1

ENCODING_HEADER='Accept-Encoding: gzip, deflate, br'
ACCEPT_HEADER='Accept: application/json, text/plain, */*'

list_nodes () {
	curl -sS "$K8S_URL/api/v1/node?itemsPerPage=900&namespace=&page=1" -H "Authorization: $K8S_AUTH_HEADER" -H "$ENCODING_HEADER" \
	-H "$ACCEPT_HEADER" --compressed \
	| jq -r '.nodes[] | .objectMeta.name'
}

list_all_pods () {
	FORMAT="%-60s %-10s %-20s %8s %-19s\n"
	printf "$FORMAT" "NAME" "STATUS" "NAMESPACE" "RESTARTS" "CREATED"
	URL="$K8S_URL/api/v1/pod?itemsPerPage=9999"
	list_all_pods_int \
	| awk -v format="$FORMAT" -F'\t' '{printf format, $1, $2, $3, $4, $5}'
}

list_all_pods_int () {
	URL="$K8S_URL/api/v1/pod?itemsPerPage=9999"
	curl -sS "$URL" -H "Authorization: $K8S_AUTH_HEADER" -H "$ENCODING_HEADER" -H "$ACCEPT_HEADER" --compressed \
	| jq -r '(.pods[] | [.objectMeta.name, .podStatus.podPhase, .objectMeta.namespace, .restartCount, .objectMeta.creationTimestamp]) | @tsv'
}

list_pods () {
	FORMAT="%-60s %-10s %-20s %8s %-19s\n"
	printf "$FORMAT" "NAME" "STATUS" "NAMESPACE" "RESTARTS" "CREATED"
	URL="$K8S_URL/api/v1/pod?itemsPerPage=9999"
	if [ ${1+x} ]; then URL="$K8S_URL/api/v1/node/$1/pod?itemsPerPage=9999"; fi 
	curl -sS "$URL" -H "Authorization: $K8S_AUTH_HEADER" -H "$ENCODING_HEADER" --compressed \
	| jq -r '(.pods[] | [.objectMeta.name, .podStatus.podPhase, .objectMeta.namespace, .restartCount, .objectMeta.creationTimestamp]) | @tsv' \
	| awk -v format="$FORMAT" -F'\t' '{printf format, $1, $2, $3, $4, $5}'
}

log () {
	[ $1 ] || { echo "You must specify a namespace"; exit 1 ; }
	[ $2 ] || { echo "You must specify a POD"; exit 1 ; }
#&relativeFrom=-1&relativeTo=0
	URL="$K8S_URL/api/v1/log/$1/$2?logFilePosition=end&referenceTimestamp=newest&offsetFrom=-3000000000&offsetTo=3000000000"
	curl -sS "$URL" \
	-H "Authorization: $K8S_AUTH_HEADER" -H "$ENCODING_HEADER" -H "$ACCEPT_HEADER" --compressed \
	| jq -r '.logs[] | [.content] | @tsv'
}

log_for () {
	[ $1 ] || { echo "You must specify a name to query a container"; exit 1 ; }
	POD_INFO=$(list_all_pods_int | grep $1)
	NAME_SPACE=$(echo "$POD_INFO" | awk -F'\t' '{ print $3 }')
	POD_NAME=$(echo "$POD_INFO" | awk -F'\t' '{ print $1 }')
	log $NAME_SPACE $POD_NAME
}

if [ "${ACTION}" = "--help" ]; then echo $USAGE; fi
if [ "${ACTION}" = "list-nodes" ]; then list_nodes; fi
if [ "${ACTION}" = "list-all-pods" ]; then list_all_pods; fi
if [ "${ACTION}" = "list-pods" ]; then list_pods $2; fi
if [ "${ACTION}" = "log" ]; then log $2 $3; fi
if [ "${ACTION}" = "log-for" ]; then log_for $2; fi
